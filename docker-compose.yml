###########################################################################################
#
#                                     ODFE Cluster
#
#  This is the compose file for ODFE. This setup composes of 4 services:
#     - ODFE (Elasticsearch)
#     - Kibana
#     - Wazuh
#     - Logstache
#
#
#  This follows SOME of the 'production' best practices recommeneded here:
#     https://opendistro.github.io/for-elasticsearch-docs/docs/install/docker-security/
#
#  For each ODFE service, I have set the heap to 8GB. The second ODFE node is commented
#  out for now - I haven't decided if I actually need it.
#
#  Notes:
#
#    Make sure min & max Java heap size is the same
#
#
##########################################################################################

version: '3'

services:
  # ES Nodes
  odfe-node1:
    image: amazon/opendistro-for-elasticsearch:0.9.0
    restart: always
    environment:
      - cluster.name=odfe-cluster
      - bootstrap.memory_lock=true # along with the memlock settings below, disables swapping
      - "ES_JAVA_OPTS=-Xms8g -Xmx8g" # minimum and maximum Java heap size, recommend setting both to 50% of system RAM
      - network.host=0.0.0.0
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - odfe-data1:/usr/share/elasticsearch/data
      - ./odfe-configs/internal_users.yml:/usr/share/elasticsearch/plugins/opendistro_security/securityconfig/internal_users.yml:ro
      - ./odfe-configs/roles-wazuh.yml:/usr/share/elasticsearch/plugins/opendistro_security/securityconfig/roles.yml:ro
      - ./odfe-configs/roles_mapping.yml:/usr/share/elasticsearch/plugins/opendistro_security/securityconfig/roles_mapping.yml:ro
      - ./odfe-configs/security-config.yml:/usr/share/elasticsearch/plugins/opendistro_security/securityconfig/config.yml
      - ./odfe-configs/es-config.yml:/usr/share/elasticsearch/config/elasticsearch.yml
        # Certs
      - ./certs/root-ca.pem:/usr/share/elasticsearch/config/root-ca.pem
      - ./certs/odfe-node1.pem:/usr/share/elasticsearch/config/odfe-node1.pem
      - ./certs/odfe-node1-key.pem:/usr/share/elasticsearch/config/odfe-node1-key.pem
      - ./certs/admin.pem:/usr/share/elasticsearch/config/admin.pem:ro
      - ./certs/admin-key.pem:/usr/share/elasticsearch/config/admin-key.pem:ro
    ports:
      - 9200:9200
      - 9600:9600 # required for Performance Analyzer
    networks:
      - odfe-net

#  odfe-node2:
#    image: amazon/opendistro-for-elasticsearch:0.9.0
#    environment:
#      - cluster.name=odfe-cluster
#      - bootstrap.memory_lock=true
#      - "ES_JAVA_OPTS=-Xms8g -Xmx8g"
#      - discovery.zen.ping.unicast.hosts=odfe-node1
#     - network.host=0.0.0.0
#    ulimits:
#      memlock:
#        soft: -1
#        hard: -1
#    volumes:
#      - odfe-data2:/usr/share/elasticsearch/data
#      - ./internal_users.yml:/usr/share/elasticsearch/plugins/opendistro_security/securityconfig/internal_users.yml:ro
#      - ./es-config.yml:/usr/share/elasticsearch/plugins/opendistro_security/securityconfig/config.yml:ro
#        # Certs
#      - ./certs/root-ca.pem:/usr/share/elasticsearch/config/root-ca.pem:ro
#      - ./certs/esnode.pem:/usr/share/elasticsearch/config/esnode.pem:ro
#      - ./certs/esnode-key.pem:/usr/share/elasticsearch/config/esnode-key.pem:ro
#      - ./certs/kirk.pem:/usr/share/elasticsearch/config/kirk.pem:ro
#      - ./certs/kirk-key.pem:/usr/share/elasticsearch/config/kirk-key.pem:ro
#    networks:
#      - odfe-net

  # Kibana
  kibana:
    build: odfe-kibana-wazuh
    restart: always
    ports:
      - 5601:5601
    expose:
      - "5601"
    environment:
      ELASTICSEARCH_URL: https://odfe-node1:9200
      ELASTICSEARCH_HOSTS: https://odfe-node1:9200
    networks:
      - odfe-net
    volumes:
      - ./kibana-configs/kibana.yml:/usr/share/kibana/config/kibana.yml:ro
      - ./certs/root-ca.pem:/usr/share/kibana/config/root-ca.pem
      - ./certs/kibana.pem:/usr/share/kibana/config/kibana.pem
      - ./certs/kibana-key.pem:/usr/share/kibana/config/kibana-key.pem

  # Wazuh Manager
  wazuh:
    build: wazuh-docker
    restart: always
    ports:
      - "1514:1514/udp"
      - "1515:1515"
      - "514:514/udp"
      - "55000:55000"
    env_file:
      - ./wazuh-configs/wazuh.env
    volumes:
      - wazuh-data1:/var/ossec/data
      - ./wazuh-configs/filebeat.yml:/etc/filebeat/filebeat.yml:ro
      - ./wazuh-configs/authd.pass:/var/ossec/etc/authd.pass:ro
      - ./wazuh-configs/0100-fortigate_decoders.xml:/var/ossec/ruleset/decoders/0100-fortigate_decoders.xml:ro
      - ./wazuh-configs/0390-fortigate_rules.xml:/var/ossec/ruleset/rules/0390-fortigate_rules.xml:ro
      - ./wazuh-configs/api-config.js:/var/ossec/api/configuration/config.js
    networks:
      - odfe-net

  # OSS Logstash
  logstash:
    image: docker.elastic.co/logstash/logstash-oss:6.7.2
    restart: always
    ports:
      #- "5000:5000" # non-ssl
      - "5044:5044" # ssl
    volumes:
      - ./logstash-configs/01-wazuh-remote.conf:/usr/share/logstash/pipeline/01-wazuh-remote.conf
      - ./logstash-configs/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    networks:
      - odfe-net


volumes:
  odfe-data1:
  #odfe-data2:
  wazuh-data1:

networks:
  odfe-net:
